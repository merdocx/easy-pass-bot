import logging
from aiogram import Router
from aiogram.types import Message
from aiogram.filters import Command
from ..security.rate_limiter import rate_limiter
from ..security.validator import validator
logger = logging.getLogger(__name__)
router = Router()
@router.message(Command("help"))

async def help_command(message: Message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /help"""
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ rate limiting
    if not await rate_limiter.is_allowed(message.from_user.id):
        await message.answer("‚è∞ –°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
        return
    
    # –í–∞–ª–∏–¥–∞—Ü–∏—è Telegram ID
    is_valid, error = validator.validate_telegram_id(message.from_user.id)
    if not is_valid:
        await message.answer("‚ùå –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏")
        return
    help_text = """ü§ñ Easy Pass - –°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–ø—É—Å–∫–∞–º–∏
üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
/start - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
/help - –°–ø—Ä–∞–≤–∫–∞
/search - –ü–æ–∏—Å–∫ –ø—Ä–æ–ø—É—Å–∫–∞ (–¥–ª—è –æ—Ö—Ä–∞–Ω—ã)
/new - –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ (–¥–ª—è –∂–∏—Ç–µ–ª–µ–π)
üè† –î–ª—è –∂–∏—Ç–µ–ª–µ–π:
‚Ä¢ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤ 1 —à–∞–≥
‚Ä¢ –ü–æ–¥–∞—á–∞ –∑–∞—è–≤–æ–∫ –Ω–∞ –ø—Ä–æ–ø—É—Å–∫–∞
‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä —Å–≤–æ–∏—Ö –∑–∞—è–≤–æ–∫
üõ°Ô∏è –î–ª—è –æ—Ö—Ä–∞–Ω—ã:
‚Ä¢ –ü–æ–∏—Å–∫ –ø—Ä–æ–ø—É—Å–∫–æ–≤ –ø–æ –Ω–æ–º–µ—Ä—É
‚Ä¢ –û—Ç–º–µ—Ç–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
üëë –î–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤:
‚Ä¢ –ú–æ–¥–µ—Ä–∞—Ü–∏—è –∑–∞—è–≤–æ–∫ —á–µ—Ä–µ–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
üí° –ü—Ä–∏–Ω—Ü–∏–ø —Ä–∞–±–æ—Ç—ã: "–û–¥–∏–Ω –∫–ª–∏–∫ - –æ–¥–Ω–æ –¥–µ–π—Å—Ç–≤–∏–µ"
    """
    await message.answer(help_text)
@router.message(Command("new"))

async def new_pass_command(message: Message):
    """–ë—ã—Å—Ç—Ä–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–π –∑–∞—è–≤–∫–∏"""
    from ..database import db
    from ..config import ROLES, USER_STATUSES, MESSAGES
    from ..keyboards.resident_keyboards import get_resident_main_menu
    user = await db.get_user_by_telegram_id(message.from_user.id)
    if not user or user.role != ROLES['RESIDENT'] or user.status != USER_STATUSES['APPROVED']:
        await message.answer("‚ùå –ù–µ—Ç –ø—Ä–∞–≤")
        return
    await message.answer(MESSAGES['PASS_CREATION_REQUEST'])

def register_common_handlers(dp):
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—â–∏—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤"""
    dp.include_router(router)
