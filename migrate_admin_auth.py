#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –º–∏–≥—Ä–∞—Ü–∏–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (–ü–µ—Ç—Ä–µ–Ω–∫–æ) –≤ –Ω–æ–≤—É—é —Å–∏—Å—Ç–µ–º—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
"""
import asyncio
import sys
import os
import logging
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º –ø—Ä–æ–µ–∫—Ç–∞
sys.path.insert(0, os.path.join(os.path.dirname(__file__), 'src'))

from easy_pass_bot.database.database import Database
from easy_pass_bot.utils.password_generator import generate_admin_password
from easy_pass_bot.utils.phone_normalizer import normalize_phone_number
import bcrypt

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)

async def migrate_petrenko_to_admin_system():
    """–ú–∏–≥—Ä–∞—Ü–∏—è –ü–µ—Ç—Ä–µ–Ω–∫–æ –≤ –Ω–æ–≤—É—é —Å–∏—Å—Ç–µ–º—É –∞–¥–º–∏–Ω–æ–≤"""
    try:
        db = Database()
        
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ü–µ—Ç—Ä–µ–Ω–∫–æ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã users
        logger.info("üîç –ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ü–µ—Ç—Ä–µ–Ω–∫–æ –≤ —Å–∏—Å—Ç–µ–º–µ...")
        petrenko_user = await db.get_user_by_id(1)
        
        if not petrenko_user:
            logger.error("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ü–µ—Ç—Ä–µ–Ω–∫–æ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–∏—Å—Ç–µ–º–µ!")
            return False
        
        if petrenko_user.role != 'admin':
            logger.error(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {petrenko_user.full_name} –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º!")
            return False
        
        logger.info(f"‚úÖ –ù–∞–π–¥–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: {petrenko_user.full_name}")
        logger.info(f"   –¢–µ–ª–µ—Ñ–æ–Ω: {petrenko_user.phone_number}")
        logger.info(f"   –†–æ–ª—å: {petrenko_user.role}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –∑–∞–ø–∏—Å—å –≤ —Ç–∞–±–ª–∏—Ü–µ admins
        existing_admin = await db.get_admin_by_user_id(petrenko_user.id)
        if existing_admin:
            logger.warning(f"‚ö†Ô∏è –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä {petrenko_user.full_name} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ —Ç–∞–±–ª–∏—Ü–µ admins!")
            logger.info(f"   ID: {existing_admin.id}")
            logger.info(f"   –õ–æ–≥–∏–Ω (—Ç–µ–ª–µ—Ñ–æ–Ω): {existing_admin.phone_number}")
            return True
        
        # –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
        normalized_phone = normalize_phone_number(petrenko_user.phone_number)
        logger.info(f"üì± –ù–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {normalized_phone}")
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω—ã–π –ø–∞—Ä–æ–ª—å
        new_password = generate_admin_password()
        logger.info(f"üîë –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å: {new_password}")
        
        # –•—ç—à–∏—Ä—É–µ–º –ø–∞—Ä–æ–ª—å
        password_hash = bcrypt.hashpw(new_password.encode('utf-8'), bcrypt.gensalt()).decode('utf-8')
        
        # –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –≤ —Ç–∞–±–ª–∏—Ü–µ admins
        logger.info("üìù –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤ —Ç–∞–±–ª–∏—Ü–µ admins...")
        success = await db.create_admin(
            username=normalized_phone,  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∫–∞–∫ username
            full_name=petrenko_user.full_name,
            password_hash=password_hash,
            user_id=petrenko_user.id,
            phone_number=normalized_phone,
            role="admin"
        )
        
        if success:
            logger.info("‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω –≤ –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–µ!")
            logger.info("")
            logger.info("=" * 60)
            logger.info("üîê –£–ß–ï–¢–ù–´–ï –î–ê–ù–ù–´–ï –î–õ–Ø –í–•–û–î–ê –í –ê–î–ú–ò–ù–ö–£")
            logger.info("=" * 60)
            logger.info(f"üë§ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: {petrenko_user.full_name}")
            logger.info(f"üì± –õ–æ–≥–∏–Ω (—Ç–µ–ª–µ—Ñ–æ–Ω): {normalized_phone}")
            logger.info(f"üîë –ü–∞—Ä–æ–ª—å: {new_password}")
            logger.info("=" * 60)
            logger.info("‚ö†Ô∏è  –í–ê–ñ–ù–û: –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ —ç—Ç–∏ –¥–∞–Ω–Ω—ã–µ –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ–º –º–µ—Å—Ç–µ!")
            logger.info("‚ö†Ô∏è  –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Å–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–≥–æ –≤—Ö–æ–¥–∞!")
            logger.info("=" * 60)
            
            return True
        else:
            logger.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!")
            return False
            
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è –º–∏–≥—Ä–∞—Ü–∏–∏: {e}")
        return False

async def verify_migration():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ø–µ—à–Ω–æ—Å—Ç–∏ –º–∏–≥—Ä–∞—Ü–∏–∏"""
    try:
        db = Database()
        
        logger.info("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ü–µ—Ç—Ä–µ–Ω–∫–æ –µ—Å—Ç—å –≤ —Ç–∞–±–ª–∏—Ü–µ users —Å —Ä–æ–ª—å—é admin
        petrenko_user = await db.get_user_by_id(1)
        if not petrenko_user or petrenko_user.role != 'admin':
            logger.error("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ü–µ—Ç—Ä–µ–Ω–∫–æ –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–æ–º!")
            return False
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –µ—Å—Ç—å –∑–∞–ø–∏—Å—å –≤ —Ç–∞–±–ª–∏—Ü–µ admins
        admin_record = await db.get_admin_by_user_id(petrenko_user.id)
        if not admin_record:
            logger.error("‚ùå –ó–∞–ø–∏—Å—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ —Ç–∞–±–ª–∏—Ü–µ admins!")
            return False
        
        logger.info("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!")
        logger.info(f"   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {petrenko_user.full_name}")
        logger.info(f"   –†–æ–ª—å –≤ users: {petrenko_user.role}")
        logger.info(f"   –¢–µ–ª–µ—Ñ–æ–Ω: {admin_record.phone_number}")
        logger.info(f"   –ê–∫—Ç–∏–≤–µ–Ω: {admin_record.is_active}")
        
        return True
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –º–∏–≥—Ä–∞—Ü–∏–∏: {e}")
        return False

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    logger.info("üöÄ –ù–∞—á–∞–ª–æ –º–∏–≥—Ä–∞—Ü–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤ –Ω–æ–≤—É—é —Å–∏—Å—Ç–µ–º—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏")
    logger.info("=" * 70)
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏—é
    success = await migrate_petrenko_to_admin_system()
    
    if success:
        logger.info("")
        logger.info("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –º–∏–≥—Ä–∞—Ü–∏–∏...")
        await verify_migration()
        logger.info("")
        logger.info("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        logger.info("üåê –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –≤–æ–π—Ç–∏ –≤ –∞–¥–º–∏–Ω–∫—É —Å –Ω–æ–≤—ã–º–∏ —É—á–µ—Ç–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏")
    else:
        logger.error("‚ùå –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –æ—à–∏–±–∫–æ–π!")
        sys.exit(1)

if __name__ == "__main__":
    asyncio.run(main())
