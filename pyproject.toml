[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "easy-pass-bot"
version = "2.2.0"
description = "Telegram bot for managing building access passes with advanced security features"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Easy Pass Bot Team", email = "team@easypassbot.com"}
]
maintainers = [
    {name = "Easy Pass Bot Team", email = "team@easypassbot.com"}
]
keywords = ["telegram", "bot", "security", "access-control", "building-management"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Communications :: Chat",
    "Topic :: Security",
    "Topic :: System :: Systems Administration",
]
requires-python = ">=3.11"
dependencies = [
    "aiogram>=3.13.0,<4.0.0",
    "aiosqlite>=0.19.0",
    "python-dotenv>=1.0.0",
    "psutil>=5.9.0",
    "pydantic>=2.0.0",
    "cryptography>=41.0.0",
    "httpx>=0.25.0",
    "aiofiles>=23.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.0.0",
    "flake8>=6.0.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
]
security = [
    "safety>=3.0.0",
    "bandit>=1.7.0",
]

[project.urls]
Homepage = "https://github.com/easypassbot/easy-pass-bot"
Documentation = "https://github.com/easypassbot/easy-pass-bot/blob/main/README.md"
Repository = "https://github.com/easypassbot/easy-pass-bot.git"
Issues = "https://github.com/easypassbot/easy-pass-bot/issues"
Changelog = "https://github.com/easypassbot/easy-pass-bot/blob/main/CHANGELOG.md"

[project.scripts]
easy-pass-bot = "easy_pass_bot.bot.main:main"
easy-pass-monitor = "easy_pass_bot.scripts.log_monitor:main"
easy-pass-security = "easy_pass_bot.scripts.security_check:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"easy_pass_bot" = ["*.py", "*.yaml", "*.yml", "*.json"]

[tool.black]
line-length = 100
target-version = ['py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "security: marks tests as security tests",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.bandit]
exclude_dirs = ["tests", "venv", ".venv"]
skips = ["B101", "B601"]
